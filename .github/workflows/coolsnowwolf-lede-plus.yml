#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Coolsnowwolf/Lede Example
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'
#  schedule:
#    - cron: 0 18 * * *
#  watch:
#    types: started

env:
  TOOLCHAIN_TAG: coolsnowwolf-lede-master
  TOOLCHAIN_NAME: toolchain-image-coolsnowwolf-lede-master-x86-64.img
  TOOLCHAIN_URL: https://github.com/crarm/OpenWrt-Toolchain/releases/download/$TOOLCHAIN_TAG/$TOOLCHAIN_NAME
  CONFIG_FILE: config/x86/64_plus.config
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Prepare Toolchain Image
        id: prepare
        run: |
          df -hT $PWD
          sudo swapoff -a
          sudo chown -R runner:runner /mnt
          sudo rm -f /mnt/swapfile
          wget -q https://github.com/crarm/OpenWrt-Toolchain/releases/download/$TOOLCHAIN_TAG/$TOOLCHAIN_NAME -O /mnt/toolchain-image.img
          mkdir /mnt/openwrt-ro openwrt workdir overlay
          sudo mount -o loop /mnt/toolchain-image.img /mnt/openwrt-ro
          sudo mount -t overlay overlay -o lowerdir=/mnt/openwrt-ro,upperdir=overlay,workdir=workdir openwrt

      - name: Install Feeds
        id: feeds
        run: |
          cd openwrt
          echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
          git pull
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a

      - name: Import external feeds - sirpdboy-package...
        working-directory: ./openwrt
        run: |
          git clone  https://github.com/kenzok8/openwrt-packages.git package/kenzo
          git clone https://github.com/sirpdboy/sirpdboy-package package/sirpdboy
          mkdir package/crarm
          cp -r package/kenzo/luci-app-argonne-config package/crarm/luci-app-argonne-config
          cp -r package/kenzo/luci-app-ikoolproxy package/crarm/luci-app-ikoolproxy
          cp -r package/kenzo/luci-app-koolproxyR package/crarm/luci-app-koolproxyR
          cp -r package/kenzo/luci-theme-argon package/crarm/luci-theme-argon
          cp -r package/kenzo/luci-theme-argonne package/crarm/luci-theme-argonne
          cp -r package/kenzo/luci-theme-atmaterial_new package/crarm/luci-theme-atmaterial_new
          cp -r package/kenzo/luci-theme-ifit package/crarm/luci-theme-ifit
          cp -r package/kenzo/luci-theme-mcat package/crarm/luci-theme-mcat
          cp -r package/kenzo/luci-theme-neobird package/crarm/luci-theme-neobird
          cp -r package/kenzo/luci-theme-opentopd package/crarm/luci-theme-opentopd
          cp -r package/kenzo/luci-theme-tomato package/crarm/luci-theme-tomato
          cp -r package/sirpdboy/luci-app-poweroffdevice package/crarm/luci-app-poweroffdevice
          cp -r package/sirpdboy/luci-app-rebootschedule package/crarm/luci-app-rebootschedule
          cp -r package/sirpdboy/luci-app-switch-lan-play package/crarm/luci-app-switch-lan-play
          cp -r package/sirpdboy/switch-lan-play package/crarm/switch-lan-play
          cp -r package/sirpdboy/luci-theme-btmod package/crarm/luci-theme-btmod
          cp -r package/sirpdboy/luci-theme-opentomato package/crarm/luci-theme-opentomato
          cp -r package/sirpdboy/luci-theme-opentomcat package/crarm/luci-theme-opentomcat
          rm -rf package/kenzo
          rm -rf package/sirpdboy
        
      - name: Configuration Customization - Build_x86_64
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x ./customize.sh && ./customize.sh
          cd openwrt && make defconfig
          
      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      
      - name: make diffconfig
        working-directory: ./openwrt
        run: |
          ./scripts/diffconfig.sh > diffconfig
      
      - name : Upload diffconfig
        uses: actions/upload-artifact@master
        with:
          name: config
          path: openwrt/diffconfig
      
      - name: Download package
        working-directory: ./openwrt
        run: |
          make download -j$(nproc)
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
        
      - name: Compile Firmware
        id: compile
        run: |
          cd $OPENWRTROOT
          echo -e "$(nproc) thread compile"
          make tools/compile -j$(nproc) || make tools/compile -j1 V=s
          make target/compile -j$(nproc) || make target/compile -j1 V=s
          make diffconfig
          make package/compile -j$(nproc) || make package/compile -j1 V=s
          make package/index
          make package/install -j$(nproc) || make package/install -j1 V=s
          make target/install -j$(nproc) || make target/install -j1 V=s
          make checksum

      - name : Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt
          path: openwrt/bin
